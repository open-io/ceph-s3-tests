version: v.10
name: ceph-s3-tests

jobs:
  - job: Run Ceph's S3 test suite
    always_executed: true
    steps:

      - name: Checkout application
        checkout: '{{ .cds.workspace }}'

      - name: Install dependencies
        script: |+
          #!/bin/bash
          apt-get update -q
          apt-get install -q -y \
            debianutils libevent-dev libffi-dev libxml2-dev libxslt1-dev \
            python3-dev python3-pip python3-virtualenv zlib1g-dev
          virtualenv -p python3 --download virtualenv
          ./virtualenv/bin/pip3 install -r requirements.txt
          git submodule update --init --remote s3compat
          rm -rf s3compat/ceph-tests
          ln -s {{.cds.workspace}} s3compat/ceph-tests
          . virtualenv/bin/activate
          pip install -r s3compat/requirements.txt

      - name: Generate configuration file
        script: |+
          #!/bin/bash
          #set -x
          cd $HOME

          # ensure region is lowercase
          export CDS_ENV_S3_REGION=${CDS_ENV_S3_REGION,,}

          # set default values
          export CDS_ENV_S3_SERVER=${CDS_ENV_S3_SERVER:-s3.${CDS_ENV_S3_REGION}.io.cloud.ovh.net}
          export CDS_ENV_S3_PORT=${CDS_ENV_S3_PORT:-443}
          export CDS_ENV_U0_PROJECTNAME=${CDS_ENV_U0_PROJECTNAME:-${CDS_ENV_S3_REGION^^}_ceph_s3_tests_project1}
          export CDS_ENV_U0_USERNAME=${CDS_ENV_U0_USERNAME:-${CDS_ENV_S3_REGION^^}_ceph_s3_tests_project1_user1}
          export CDS_ENV_U1_USERNAME=${CDS_ENV_U1_USERNAME:-${CDS_ENV_S3_REGION^^}_ceph_s3_tests_project1_user2}

          # ensure other variables are set
          _check=1
          for var in s3_server s3_port s3_region u0_access u0_secret u0_username u0_projectname u1_access u1_secret u1_username; do
            _var="CDS_ENV_${var^^}"
            [[ -z "${!_var}" ]] && echo "missing env variable '$var' from infra CDS environment" && _check=0
            worker export ${var} "${!_var}"
          done
          [[ $_check -ne 1 ]] && exit 1

          # generate configuration files from templates
          mkdir -p $HOME/.aws
          for conf in ceph-s3-tests.conf .aws/credentials .aws/config setup.cfg; do
            echo "Generating test configuration file: $HOME/${conf}"
            envsubst < config/${conf}.in > $HOME/$conf
            cat $HOME/$conf
          done

      - name: Run tests
        optional: true
        script:
          - cd $HOME
          - S3TEST_CONF=ceph-s3-tests.conf ./virtualenv/bin/nosetests -a '!fails_on_aws' --debug-log=debug.log -v --with-xunit --xunit-file=tests_report.xml s3tests_boto3.functional.test_s3

      - name: Cleanup
        optional: true
        script: |+
          #!/bin/bash
          . virtualenv/bin/activate
          pip install awscli
          set -x
          python clean-all-buckets.py "{{.cds.build.u0_username}}" "https://{{.cds.build.s3_server}}:{{.cds.build.s3_port}}"
          python clean-all-buckets.py "{{.cds.build.u1_username}}" "https://{{.cds.build.s3_server}}:{{.cds.build.s3_port}}"

      - name: Analyze tests results
        optional: true
        script:
          - . virtualenv/bin/activate
          - ./s3compat/bin/get_ceph_test_attributes.py
          - ./s3compat/bin/report.py -kf "known-failures/{{.infra_id}}.yaml" --detailed s3compat/output/ceph-s3.out.yaml "tests_report.xml" | tee tests_report.txt

      - name: Save tests report
        optional: true
        script:
          - "worker upload --tag='{{.cds.version}}' 'tests_report.xml' 'tests_report.txt'"
          - "[ -f debug.log ] && worker upload --tag='{{.cds.version}}' 'debug.log'"

      - optional: true
        always_executed: true
        jUnitReport: '{{.cds.workspace}}/tests_report.xml'

    requirements:
      - model: Ubuntu-18.04-VM-b2-07
